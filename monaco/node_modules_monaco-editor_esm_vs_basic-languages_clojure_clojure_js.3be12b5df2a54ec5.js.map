{"version":3,"file":"/monaco/node_modules_monaco-editor_esm_vs_basic-languages_clojure_clojure_js.3be12b5df2a54ec5.js","mappings":"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","sources":["./node_modules/monaco-editor/esm/vs/basic-languages/clojure/clojure.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.33.0(4b1abad427e58dbedc1215d99a0902ffc885fcd4)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\n// src/basic-languages/clojure/clojure.ts\nvar conf = {\n  comments: {\n    lineComment: \";;\"\n  },\n  brackets: [\n    [\"[\", \"]\"],\n    [\"(\", \")\"],\n    [\"{\", \"}\"]\n  ],\n  autoClosingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: '\"', close: '\"' },\n    { open: \"(\", close: \")\" },\n    { open: \"{\", close: \"}\" }\n  ],\n  surroundingPairs: [\n    { open: \"[\", close: \"]\" },\n    { open: '\"', close: '\"' },\n    { open: \"(\", close: \")\" },\n    { open: \"{\", close: \"}\" }\n  ]\n};\nvar language = {\n  defaultToken: \"\",\n  ignoreCase: true,\n  tokenPostfix: \".clj\",\n  brackets: [\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" }\n  ],\n  constants: [\"true\", \"false\", \"nil\"],\n  numbers: /^(?:[+\\-]?\\d+(?:(?:N|(?:[eE][+\\-]?\\d+))|(?:\\.?\\d*(?:M|(?:[eE][+\\-]?\\d+))?)|\\/\\d+|[xX][0-9a-fA-F]+|r[0-9a-zA-Z]+)?(?=[\\\\\\[\\]\\s\"#'(),;@^`{}~]|$))/,\n  characters: /^(?:\\\\(?:backspace|formfeed|newline|return|space|tab|o[0-7]{3}|u[0-9A-Fa-f]{4}|x[0-9A-Fa-f]{4}|.)?(?=[\\\\\\[\\]\\s\"(),;@^`{}~]|$))/,\n  escapes: /^\\\\(?:[\"'\\\\bfnrt]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\n  qualifiedSymbols: /^(?:(?:[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*(?:\\.[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*)*\\/)?(?:\\/|[^\\\\\\/\\[\\]\\d\\s\"#'(),;@^`{}~][^\\\\\\[\\]\\s\"(),;@^`{}~]*)*(?=[\\\\\\[\\]\\s\"(),;@^`{}~]|$))/,\n  specialForms: [\n    \".\",\n    \"catch\",\n    \"def\",\n    \"do\",\n    \"if\",\n    \"monitor-enter\",\n    \"monitor-exit\",\n    \"new\",\n    \"quote\",\n    \"recur\",\n    \"set!\",\n    \"throw\",\n    \"try\",\n    \"var\"\n  ],\n  coreSymbols: [\n    \"*\",\n    \"*'\",\n    \"*1\",\n    \"*2\",\n    \"*3\",\n    \"*agent*\",\n    \"*allow-unresolved-vars*\",\n    \"*assert*\",\n    \"*clojure-version*\",\n    \"*command-line-args*\",\n    \"*compile-files*\",\n    \"*compile-path*\",\n    \"*compiler-options*\",\n    \"*data-readers*\",\n    \"*default-data-reader-fn*\",\n    \"*e\",\n    \"*err*\",\n    \"*file*\",\n    \"*flush-on-newline*\",\n    \"*fn-loader*\",\n    \"*in*\",\n    \"*math-context*\",\n    \"*ns*\",\n    \"*out*\",\n    \"*print-dup*\",\n    \"*print-length*\",\n    \"*print-level*\",\n    \"*print-meta*\",\n    \"*print-namespace-maps*\",\n    \"*print-readably*\",\n    \"*read-eval*\",\n    \"*reader-resolver*\",\n    \"*source-path*\",\n    \"*suppress-read*\",\n    \"*unchecked-math*\",\n    \"*use-context-classloader*\",\n    \"*verbose-defrecords*\",\n    \"*warn-on-reflection*\",\n    \"+\",\n    \"+'\",\n    \"-\",\n    \"-'\",\n    \"->\",\n    \"->>\",\n    \"->ArrayChunk\",\n    \"->Eduction\",\n    \"->Vec\",\n    \"->VecNode\",\n    \"->VecSeq\",\n    \"-cache-protocol-fn\",\n    \"-reset-methods\",\n    \"..\",\n    \"/\",\n    \"<\",\n    \"<=\",\n    \"=\",\n    \"==\",\n    \">\",\n    \">=\",\n    \"EMPTY-NODE\",\n    \"Inst\",\n    \"StackTraceElement->vec\",\n    \"Throwable->map\",\n    \"accessor\",\n    \"aclone\",\n    \"add-classpath\",\n    \"add-watch\",\n    \"agent\",\n    \"agent-error\",\n    \"agent-errors\",\n    \"aget\",\n    \"alength\",\n    \"alias\",\n    \"all-ns\",\n    \"alter\",\n    \"alter-meta!\",\n    \"alter-var-root\",\n    \"amap\",\n    \"ancestors\",\n    \"and\",\n    \"any?\",\n    \"apply\",\n    \"areduce\",\n    \"array-map\",\n    \"as->\",\n    \"aset\",\n    \"aset-boolean\",\n    \"aset-byte\",\n    \"aset-char\",\n    \"aset-double\",\n    \"aset-float\",\n    \"aset-int\",\n    \"aset-long\",\n    \"aset-short\",\n    \"assert\",\n    \"assoc\",\n    \"assoc!\",\n    \"assoc-in\",\n    \"associative?\",\n    \"atom\",\n    \"await\",\n    \"await-for\",\n    \"await1\",\n    \"bases\",\n    \"bean\",\n    \"bigdec\",\n    \"bigint\",\n    \"biginteger\",\n    \"binding\",\n    \"bit-and\",\n    \"bit-and-not\",\n    \"bit-clear\",\n    \"bit-flip\",\n    \"bit-not\",\n    \"bit-or\",\n    \"bit-set\",\n    \"bit-shift-left\",\n    \"bit-shift-right\",\n    \"bit-test\",\n    \"bit-xor\",\n    \"boolean\",\n    \"boolean-array\",\n    \"boolean?\",\n    \"booleans\",\n    \"bound-fn\",\n    \"bound-fn*\",\n    \"bound?\",\n    \"bounded-count\",\n    \"butlast\",\n    \"byte\",\n    \"byte-array\",\n    \"bytes\",\n    \"bytes?\",\n    \"case\",\n    \"cast\",\n    \"cat\",\n    \"char\",\n    \"char-array\",\n    \"char-escape-string\",\n    \"char-name-string\",\n    \"char?\",\n    \"chars\",\n    \"chunk\",\n    \"chunk-append\",\n    \"chunk-buffer\",\n    \"chunk-cons\",\n    \"chunk-first\",\n    \"chunk-next\",\n    \"chunk-rest\",\n    \"chunked-seq?\",\n    \"class\",\n    \"class?\",\n    \"clear-agent-errors\",\n    \"clojure-version\",\n    \"coll?\",\n    \"comment\",\n    \"commute\",\n    \"comp\",\n    \"comparator\",\n    \"compare\",\n    \"compare-and-set!\",\n    \"compile\",\n    \"complement\",\n    \"completing\",\n    \"concat\",\n    \"cond\",\n    \"cond->\",\n    \"cond->>\",\n    \"condp\",\n    \"conj\",\n    \"conj!\",\n    \"cons\",\n    \"constantly\",\n    \"construct-proxy\",\n    \"contains?\",\n    \"count\",\n    \"counted?\",\n    \"create-ns\",\n    \"create-struct\",\n    \"cycle\",\n    \"dec\",\n    \"dec'\",\n    \"decimal?\",\n    \"declare\",\n    \"dedupe\",\n    \"default-data-readers\",\n    \"definline\",\n    \"definterface\",\n    \"defmacro\",\n    \"defmethod\",\n    \"defmulti\",\n    \"defn\",\n    \"defn-\",\n    \"defonce\",\n    \"defprotocol\",\n    \"defrecord\",\n    \"defstruct\",\n    \"deftype\",\n    \"delay\",\n    \"delay?\",\n    \"deliver\",\n    \"denominator\",\n    \"deref\",\n    \"derive\",\n    \"descendants\",\n    \"destructure\",\n    \"disj\",\n    \"disj!\",\n    \"dissoc\",\n    \"dissoc!\",\n    \"distinct\",\n    \"distinct?\",\n    \"doall\",\n    \"dorun\",\n    \"doseq\",\n    \"dosync\",\n    \"dotimes\",\n    \"doto\",\n    \"double\",\n    \"double-array\",\n    \"double?\",\n    \"doubles\",\n    \"drop\",\n    \"drop-last\",\n    \"drop-while\",\n    \"eduction\",\n    \"empty\",\n    \"empty?\",\n    \"ensure\",\n    \"ensure-reduced\",\n    \"enumeration-seq\",\n    \"error-handler\",\n    \"error-mode\",\n    \"eval\",\n    \"even?\",\n    \"every-pred\",\n    \"every?\",\n    \"ex-data\",\n    \"ex-info\",\n    \"extend\",\n    \"extend-protocol\",\n    \"extend-type\",\n    \"extenders\",\n    \"extends?\",\n    \"false?\",\n    \"ffirst\",\n    \"file-seq\",\n    \"filter\",\n    \"filterv\",\n    \"find\",\n    \"find-keyword\",\n    \"find-ns\",\n    \"find-protocol-impl\",\n    \"find-protocol-method\",\n    \"find-var\",\n    \"first\",\n    \"flatten\",\n    \"float\",\n    \"float-array\",\n    \"float?\",\n    \"floats\",\n    \"flush\",\n    \"fn\",\n    \"fn?\",\n    \"fnext\",\n    \"fnil\",\n    \"for\",\n    \"force\",\n    \"format\",\n    \"frequencies\",\n    \"future\",\n    \"future-call\",\n    \"future-cancel\",\n    \"future-cancelled?\",\n    \"future-done?\",\n    \"future?\",\n    \"gen-class\",\n    \"gen-interface\",\n    \"gensym\",\n    \"get\",\n    \"get-in\",\n    \"get-method\",\n    \"get-proxy-class\",\n    \"get-thread-bindings\",\n    \"get-validator\",\n    \"group-by\",\n    \"halt-when\",\n    \"hash\",\n    \"hash-combine\",\n    \"hash-map\",\n    \"hash-ordered-coll\",\n    \"hash-set\",\n    \"hash-unordered-coll\",\n    \"ident?\",\n    \"identical?\",\n    \"identity\",\n    \"if-let\",\n    \"if-not\",\n    \"if-some\",\n    \"ifn?\",\n    \"import\",\n    \"in-ns\",\n    \"inc\",\n    \"inc'\",\n    \"indexed?\",\n    \"init-proxy\",\n    \"inst-ms\",\n    \"inst-ms*\",\n    \"inst?\",\n    \"instance?\",\n    \"int\",\n    \"int-array\",\n    \"int?\",\n    \"integer?\",\n    \"interleave\",\n    \"intern\",\n    \"interpose\",\n    \"into\",\n    \"into-array\",\n    \"ints\",\n    \"io!\",\n    \"isa?\",\n    \"iterate\",\n    \"iterator-seq\",\n    \"juxt\",\n    \"keep\",\n    \"keep-indexed\",\n    \"key\",\n    \"keys\",\n    \"keyword\",\n    \"keyword?\",\n    \"last\",\n    \"lazy-cat\",\n    \"lazy-seq\",\n    \"let\",\n    \"letfn\",\n    \"line-seq\",\n    \"list\",\n    \"list*\",\n    \"list?\",\n    \"load\",\n    \"load-file\",\n    \"load-reader\",\n    \"load-string\",\n    \"loaded-libs\",\n    \"locking\",\n    \"long\",\n    \"long-array\",\n    \"longs\",\n    \"loop\",\n    \"macroexpand\",\n    \"macroexpand-1\",\n    \"make-array\",\n    \"make-hierarchy\",\n    \"map\",\n    \"map-entry?\",\n    \"map-indexed\",\n    \"map?\",\n    \"mapcat\",\n    \"mapv\",\n    \"max\",\n    \"max-key\",\n    \"memfn\",\n    \"memoize\",\n    \"merge\",\n    \"merge-with\",\n    \"meta\",\n    \"method-sig\",\n    \"methods\",\n    \"min\",\n    \"min-key\",\n    \"mix-collection-hash\",\n    \"mod\",\n    \"munge\",\n    \"name\",\n    \"namespace\",\n    \"namespace-munge\",\n    \"nat-int?\",\n    \"neg-int?\",\n    \"neg?\",\n    \"newline\",\n    \"next\",\n    \"nfirst\",\n    \"nil?\",\n    \"nnext\",\n    \"not\",\n    \"not-any?\",\n    \"not-empty\",\n    \"not-every?\",\n    \"not=\",\n    \"ns\",\n    \"ns-aliases\",\n    \"ns-imports\",\n    \"ns-interns\",\n    \"ns-map\",\n    \"ns-name\",\n    \"ns-publics\",\n    \"ns-refers\",\n    \"ns-resolve\",\n    \"ns-unalias\",\n    \"ns-unmap\",\n    \"nth\",\n    \"nthnext\",\n    \"nthrest\",\n    \"num\",\n    \"number?\",\n    \"numerator\",\n    \"object-array\",\n    \"odd?\",\n    \"or\",\n    \"parents\",\n    \"partial\",\n    \"partition\",\n    \"partition-all\",\n    \"partition-by\",\n    \"pcalls\",\n    \"peek\",\n    \"persistent!\",\n    \"pmap\",\n    \"pop\",\n    \"pop!\",\n    \"pop-thread-bindings\",\n    \"pos-int?\",\n    \"pos?\",\n    \"pr\",\n    \"pr-str\",\n    \"prefer-method\",\n    \"prefers\",\n    \"primitives-classnames\",\n    \"print\",\n    \"print-ctor\",\n    \"print-dup\",\n    \"print-method\",\n    \"print-simple\",\n    \"print-str\",\n    \"printf\",\n    \"println\",\n    \"println-str\",\n    \"prn\",\n    \"prn-str\",\n    \"promise\",\n    \"proxy\",\n    \"proxy-call-with-super\",\n    \"proxy-mappings\",\n    \"proxy-name\",\n    \"proxy-super\",\n    \"push-thread-bindings\",\n    \"pvalues\",\n    \"qualified-ident?\",\n    \"qualified-keyword?\",\n    \"qualified-symbol?\",\n    \"quot\",\n    \"rand\",\n    \"rand-int\",\n    \"rand-nth\",\n    \"random-sample\",\n    \"range\",\n    \"ratio?\",\n    \"rational?\",\n    \"rationalize\",\n    \"re-find\",\n    \"re-groups\",\n    \"re-matcher\",\n    \"re-matches\",\n    \"re-pattern\",\n    \"re-seq\",\n    \"read\",\n    \"read-line\",\n    \"read-string\",\n    \"reader-conditional\",\n    \"reader-conditional?\",\n    \"realized?\",\n    \"record?\",\n    \"reduce\",\n    \"reduce-kv\",\n    \"reduced\",\n    \"reduced?\",\n    \"reductions\",\n    \"ref\",\n    \"ref-history-count\",\n    \"ref-max-history\",\n    \"ref-min-history\",\n    \"ref-set\",\n    \"refer\",\n    \"refer-clojure\",\n    \"reify\",\n    \"release-pending-sends\",\n    \"rem\",\n    \"remove\",\n    \"remove-all-methods\",\n    \"remove-method\",\n    \"remove-ns\",\n    \"remove-watch\",\n    \"repeat\",\n    \"repeatedly\",\n    \"replace\",\n    \"replicate\",\n    \"require\",\n    \"reset!\",\n    \"reset-meta!\",\n    \"reset-vals!\",\n    \"resolve\",\n    \"rest\",\n    \"restart-agent\",\n    \"resultset-seq\",\n    \"reverse\",\n    \"reversible?\",\n    \"rseq\",\n    \"rsubseq\",\n    \"run!\",\n    \"satisfies?\",\n    \"second\",\n    \"select-keys\",\n    \"send\",\n    \"send-off\",\n    \"send-via\",\n    \"seq\",\n    \"seq?\",\n    \"seqable?\",\n    \"seque\",\n    \"sequence\",\n    \"sequential?\",\n    \"set\",\n    \"set-agent-send-executor!\",\n    \"set-agent-send-off-executor!\",\n    \"set-error-handler!\",\n    \"set-error-mode!\",\n    \"set-validator!\",\n    \"set?\",\n    \"short\",\n    \"short-array\",\n    \"shorts\",\n    \"shuffle\",\n    \"shutdown-agents\",\n    \"simple-ident?\",\n    \"simple-keyword?\",\n    \"simple-symbol?\",\n    \"slurp\",\n    \"some\",\n    \"some->\",\n    \"some->>\",\n    \"some-fn\",\n    \"some?\",\n    \"sort\",\n    \"sort-by\",\n    \"sorted-map\",\n    \"sorted-map-by\",\n    \"sorted-set\",\n    \"sorted-set-by\",\n    \"sorted?\",\n    \"special-symbol?\",\n    \"spit\",\n    \"split-at\",\n    \"split-with\",\n    \"str\",\n    \"string?\",\n    \"struct\",\n    \"struct-map\",\n    \"subs\",\n    \"subseq\",\n    \"subvec\",\n    \"supers\",\n    \"swap!\",\n    \"swap-vals!\",\n    \"symbol\",\n    \"symbol?\",\n    \"sync\",\n    \"tagged-literal\",\n    \"tagged-literal?\",\n    \"take\",\n    \"take-last\",\n    \"take-nth\",\n    \"take-while\",\n    \"test\",\n    \"the-ns\",\n    \"thread-bound?\",\n    \"time\",\n    \"to-array\",\n    \"to-array-2d\",\n    \"trampoline\",\n    \"transduce\",\n    \"transient\",\n    \"tree-seq\",\n    \"true?\",\n    \"type\",\n    \"unchecked-add\",\n    \"unchecked-add-int\",\n    \"unchecked-byte\",\n    \"unchecked-char\",\n    \"unchecked-dec\",\n    \"unchecked-dec-int\",\n    \"unchecked-divide-int\",\n    \"unchecked-double\",\n    \"unchecked-float\",\n    \"unchecked-inc\",\n    \"unchecked-inc-int\",\n    \"unchecked-int\",\n    \"unchecked-long\",\n    \"unchecked-multiply\",\n    \"unchecked-multiply-int\",\n    \"unchecked-negate\",\n    \"unchecked-negate-int\",\n    \"unchecked-remainder-int\",\n    \"unchecked-short\",\n    \"unchecked-subtract\",\n    \"unchecked-subtract-int\",\n    \"underive\",\n    \"unquote\",\n    \"unquote-splicing\",\n    \"unreduced\",\n    \"unsigned-bit-shift-right\",\n    \"update\",\n    \"update-in\",\n    \"update-proxy\",\n    \"uri?\",\n    \"use\",\n    \"uuid?\",\n    \"val\",\n    \"vals\",\n    \"var-get\",\n    \"var-set\",\n    \"var?\",\n    \"vary-meta\",\n    \"vec\",\n    \"vector\",\n    \"vector-of\",\n    \"vector?\",\n    \"volatile!\",\n    \"volatile?\",\n    \"vreset!\",\n    \"vswap!\",\n    \"when\",\n    \"when-first\",\n    \"when-let\",\n    \"when-not\",\n    \"when-some\",\n    \"while\",\n    \"with-bindings\",\n    \"with-bindings*\",\n    \"with-in-str\",\n    \"with-loading-context\",\n    \"with-local-vars\",\n    \"with-meta\",\n    \"with-open\",\n    \"with-out-str\",\n    \"with-precision\",\n    \"with-redefs\",\n    \"with-redefs-fn\",\n    \"xml-seq\",\n    \"zero?\",\n    \"zipmap\"\n  ],\n  tokenizer: {\n    root: [\n      { include: \"@whitespace\" },\n      [/@numbers/, \"number\"],\n      [/@characters/, \"string\"],\n      { include: \"@string\" },\n      [/[()\\[\\]{}]/, \"@brackets\"],\n      [/\\/#\"(?:\\.|(?:\")|[^\"\\n])*\"\\/g/, \"regexp\"],\n      [/[#'@^`~]/, \"meta\"],\n      [\n        /@qualifiedSymbols/,\n        {\n          cases: {\n            \"^:.+$\": \"constant\",\n            \"@specialForms\": \"keyword\",\n            \"@coreSymbols\": \"keyword\",\n            \"@constants\": \"constant\",\n            \"@default\": \"identifier\"\n          }\n        }\n      ]\n    ],\n    whitespace: [\n      [/[\\s,]+/, \"white\"],\n      [/;.*$/, \"comment\"],\n      [/\\(comment\\b/, \"comment\", \"@comment\"]\n    ],\n    comment: [\n      [/\\(/, \"comment\", \"@push\"],\n      [/\\)/, \"comment\", \"@pop\"],\n      [/[^()]/, \"comment\"]\n    ],\n    string: [[/\"/, \"string\", \"@multiLineString\"]],\n    multiLineString: [\n      [/\"/, \"string\", \"@popall\"],\n      [/@escapes/, \"string.escape\"],\n      [/./, \"string\"]\n    ]\n  }\n};\nexport {\n  conf,\n  language\n};\n"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","ignoreCase","tokenPostfix","token","constants","numbers","characters","escapes","qualifiedSymbols","specialForms","coreSymbols","tokenizer","root","include","cases","whitespace","comment","string","multiLineString"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}